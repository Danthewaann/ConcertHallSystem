package concerthallsystem;

import java.awt.event.ActionListener;
import java.io.File;
import java.io.PrintWriter;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFrame;

/**
 * This is the MainGUI Class that provides the visual elements in a single JFrame form,
 * which contains 4 different JPanels for the different parts of the GUI:
 * 
 * 1. Main Menu
 * 2. Create New Concert
 * 3. Select Concert
 * 4. Concert Seating Plan
 * 
 * This class contains most of the exception handling for input and output, and
 * some form of searching algorithms when we compare user input to values that are
 * already stored in memory when the application is run.
 * 
 * This information will then be handed down to the other classes to use to calculate
 * the values that then get passed back up to the MainGUI to display on screen
 * 
 * Assumptions were made in regards to the system only needing to handle one concert
 * at a time. We assumed this meant that the system will display one concert at 
 * a time, as the system specification wanted all the concerts to automatically be
 * loaded from file when the system is started, so we decided that it was better to allow
 * the administrator to switch from one concert to another without having to stop
 * and start the system again
 * 
 * @author Daniel Black
 */

public class MainGUI extends JFrame 
{
    private ArrayList<Concert> concerts;
    private Concert currentConcert;          
                 
    public MainGUI() 
    {
        initComponents();
        this.createConcertPanel.setVisible(false);
        this.selectConcertPanel.setVisible(false);
        this.seatingPlanPanel.setVisible(false);
        this.mainMenuPanel.setVisible(false);                                  
        this.startProgram();                                
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainMenuPanel = new javax.swing.JPanel();
        mainTitleLabel = new javax.swing.JLabel();
        subTitleLabel = new javax.swing.JLabel();
        createNewConcertButton = new javax.swing.JButton();
        selectConcertButton = new javax.swing.JButton();
        exitProgramButton = new javax.swing.JButton();
        seatingPlanPanel = new javax.swing.JPanel();
        Options = new javax.swing.JPanel();
        obtainReportButton = new javax.swing.JButton();
        setSectionPriceButton = new javax.swing.JButton();
        queryBySeatButton = new javax.swing.JButton();
        queryByCustomerButton = new javax.swing.JButton();
        mainMenuButtonFromSeats = new javax.swing.JButton();
        saveConcertButton = new javax.swing.JButton();
        Sections = new javax.swing.JPanel();
        goldSection = new javax.swing.JLabel();
        silverSection = new javax.swing.JLabel();
        bronzeSection = new javax.swing.JLabel();
        Numbers = new javax.swing.JPanel();
        num1 = new javax.swing.JLabel();
        num2 = new javax.swing.JLabel();
        num3 = new javax.swing.JLabel();
        num4 = new javax.swing.JLabel();
        num5 = new javax.swing.JLabel();
        num6 = new javax.swing.JLabel();
        num7 = new javax.swing.JLabel();
        num8 = new javax.swing.JLabel();
        num9 = new javax.swing.JLabel();
        num10 = new javax.swing.JLabel();
        Rows = new javax.swing.JPanel();
        rowA = new javax.swing.JLabel();
        rowB = new javax.swing.JLabel();
        rowC = new javax.swing.JLabel();
        rowD = new javax.swing.JLabel();
        rowE = new javax.swing.JLabel();
        rowF = new javax.swing.JLabel();
        rowG = new javax.swing.JLabel();
        rowH = new javax.swing.JLabel();
        rowI = new javax.swing.JLabel();
        Seats = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        seatC1 = new javax.swing.JButton();
        seatC4 = new javax.swing.JButton();
        seatB4 = new javax.swing.JButton();
        seatB1 = new javax.swing.JButton();
        seatA5 = new javax.swing.JButton();
        seatB3 = new javax.swing.JButton();
        seatC5 = new javax.swing.JButton();
        seatB5 = new javax.swing.JButton();
        seatC3 = new javax.swing.JButton();
        seatA3 = new javax.swing.JButton();
        seatA4 = new javax.swing.JButton();
        seatB2 = new javax.swing.JButton();
        seatA1 = new javax.swing.JButton();
        seatC2 = new javax.swing.JButton();
        seatA2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        seatF8 = new javax.swing.JButton();
        seatE10 = new javax.swing.JButton();
        seatD10 = new javax.swing.JButton();
        seatE7 = new javax.swing.JButton();
        seatD9 = new javax.swing.JButton();
        seatF6 = new javax.swing.JButton();
        seatE9 = new javax.swing.JButton();
        seatD6 = new javax.swing.JButton();
        seatF7 = new javax.swing.JButton();
        seatF10 = new javax.swing.JButton();
        seatE6 = new javax.swing.JButton();
        seatE8 = new javax.swing.JButton();
        seatD7 = new javax.swing.JButton();
        seatD8 = new javax.swing.JButton();
        seatF9 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        seatF3 = new javax.swing.JButton();
        seatF4 = new javax.swing.JButton();
        seatD2 = new javax.swing.JButton();
        seatF5 = new javax.swing.JButton();
        seatE1 = new javax.swing.JButton();
        seatD3 = new javax.swing.JButton();
        seatD4 = new javax.swing.JButton();
        seatE2 = new javax.swing.JButton();
        seatD1 = new javax.swing.JButton();
        seatE3 = new javax.swing.JButton();
        seatF1 = new javax.swing.JButton();
        seatD5 = new javax.swing.JButton();
        seatE4 = new javax.swing.JButton();
        seatE5 = new javax.swing.JButton();
        seatF2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        seatI6 = new javax.swing.JButton();
        seatH8 = new javax.swing.JButton();
        seatG10 = new javax.swing.JButton();
        seatG7 = new javax.swing.JButton();
        seatH10 = new javax.swing.JButton();
        seatI10 = new javax.swing.JButton();
        seatG6 = new javax.swing.JButton();
        seatI7 = new javax.swing.JButton();
        seatH6 = new javax.swing.JButton();
        seatH7 = new javax.swing.JButton();
        seatI8 = new javax.swing.JButton();
        seatG9 = new javax.swing.JButton();
        seatH9 = new javax.swing.JButton();
        seatG8 = new javax.swing.JButton();
        seatI9 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        seatH2 = new javax.swing.JButton();
        seatH3 = new javax.swing.JButton();
        seatI2 = new javax.swing.JButton();
        seatI5 = new javax.swing.JButton();
        seatI4 = new javax.swing.JButton();
        seatI1 = new javax.swing.JButton();
        seatH4 = new javax.swing.JButton();
        seatG2 = new javax.swing.JButton();
        seatG1 = new javax.swing.JButton();
        seatG3 = new javax.swing.JButton();
        seatG4 = new javax.swing.JButton();
        seatI3 = new javax.swing.JButton();
        seatH1 = new javax.swing.JButton();
        seatG5 = new javax.swing.JButton();
        seatH5 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        seatC6 = new javax.swing.JButton();
        seatC9 = new javax.swing.JButton();
        seatB9 = new javax.swing.JButton();
        seatB6 = new javax.swing.JButton();
        seatA10 = new javax.swing.JButton();
        seatB8 = new javax.swing.JButton();
        seatC10 = new javax.swing.JButton();
        seatB10 = new javax.swing.JButton();
        seatC8 = new javax.swing.JButton();
        seatA8 = new javax.swing.JButton();
        seatA9 = new javax.swing.JButton();
        seatB7 = new javax.swing.JButton();
        seatA6 = new javax.swing.JButton();
        seatC7 = new javax.swing.JButton();
        seatA7 = new javax.swing.JButton();
        drawingPanelTop = new javax.swing.JPanel();
        stageLabel = new javax.swing.JLabel();
        MainEntranceLabel1 = new javax.swing.JLabel();
        MainEntranceLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        drawingPanelBottom = new javax.swing.JPanel();
        MainEntranceLabel = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        createConcertPanel = new javax.swing.JPanel();
        CreateConcertTitle = new javax.swing.JLabel();
        mainMenuButtonFromCreate = new javax.swing.JButton();
        newConcertInput = new javax.swing.JPanel();
        concertNameLabel = new javax.swing.JLabel();
        ConcertNameInputField = new javax.swing.JTextField();
        concertDateLabel = new javax.swing.JLabel();
        dayLabel = new javax.swing.JLabel();
        monthLabel = new javax.swing.JLabel();
        yearLabel = new javax.swing.JLabel();
        dayDropDownList = new javax.swing.JComboBox<>();
        monthDropDownList = new javax.swing.JComboBox<>();
        yearDropDownList = new javax.swing.JComboBox<>();
        createConcertButton = new javax.swing.JButton();
        selectConcertPanel = new javax.swing.JPanel();
        SelectConcertTitle = new javax.swing.JLabel();
        mainMenuButtonFromSelect = new javax.swing.JButton();
        selectConcertFromList = new javax.swing.JPanel();
        viewConcertButton = new javax.swing.JButton();
        concertDropDownList = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        mainMenuPanel.setMinimumSize(new java.awt.Dimension(1000, 800));

        mainTitleLabel.setFont(new java.awt.Font("Verdana", 1, 48)); // NOI18N
        mainTitleLabel.setText("BigTown Civic Centre");

        subTitleLabel.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        subTitleLabel.setText("Concert Hall Booking System");

        createNewConcertButton.setCursor(Constant.SELECT_CURSOR);
        createNewConcertButton.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        createNewConcertButton.setText("Create New Concert");
        createNewConcertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewConcertButtonActionPerformed(evt);
            }
        });

        selectConcertButton.setCursor(Constant.SELECT_CURSOR);
        selectConcertButton.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        selectConcertButton.setText("Select Concert");
        selectConcertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectConcertButtonActionPerformed(evt);
            }
        });

        exitProgramButton.setCursor(Constant.SELECT_CURSOR);
        exitProgramButton.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        exitProgramButton.setText("Save & Exit");
        exitProgramButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitProgramButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainMenuPanelLayout = new javax.swing.GroupLayout(mainMenuPanel);
        mainMenuPanel.setLayout(mainMenuPanelLayout);
        mainMenuPanelLayout.setHorizontalGroup(
            mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuPanelLayout.createSequentialGroup()
                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainMenuPanelLayout.createSequentialGroup()
                        .addGap(374, 374, 374)
                        .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(selectConcertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(createNewConcertButton)
                            .addComponent(exitProgramButton, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(mainMenuPanelLayout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(mainTitleLabel))
                    .addGroup(mainMenuPanelLayout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(subTitleLabel)))
                .addContainerGap(232, Short.MAX_VALUE))
        );
        mainMenuPanelLayout.setVerticalGroup(
            mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuPanelLayout.createSequentialGroup()
                .addGap(238, 238, 238)
                .addComponent(mainTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subTitleLabel)
                .addGap(62, 62, 62)
                .addComponent(createNewConcertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selectConcertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exitProgramButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(241, 241, 241))
        );

        obtainReportButton.setCursor(Constant.SELECT_CURSOR);
        obtainReportButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        obtainReportButton.setText("Obtain Report");
        obtainReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obtainReportButtonActionPerformed(evt);
            }
        });

        setSectionPriceButton.setCursor(Constant.SELECT_CURSOR);
        setSectionPriceButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        setSectionPriceButton.setText("Set Section Price");
        setSectionPriceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setSectionPriceButtonActionPerformed(evt);
            }
        });

        queryBySeatButton.setCursor(Constant.SELECT_CURSOR);
        queryBySeatButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        queryBySeatButton.setText("Query By Seat");
        queryBySeatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryBySeatButtonActionPerformed(evt);
            }
        });

        queryByCustomerButton.setCursor(Constant.SELECT_CURSOR);
        queryByCustomerButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        queryByCustomerButton.setText("Query By Customer");
        queryByCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryByCustomerButtonActionPerformed(evt);
            }
        });

        mainMenuButtonFromSeats.setCursor(Constant.SELECT_CURSOR);
        mainMenuButtonFromSeats.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        mainMenuButtonFromSeats.setText("Main Menu");
        mainMenuButtonFromSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuButtonFromSeatsActionPerformed(evt);
            }
        });

        saveConcertButton.setCursor(Constant.SELECT_CURSOR);
        saveConcertButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        saveConcertButton.setText("Save Concert");
        saveConcertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveConcertButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OptionsLayout = new javax.swing.GroupLayout(Options);
        Options.setLayout(OptionsLayout);
        OptionsLayout.setHorizontalGroup(
            OptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(obtainReportButton)
                    .addComponent(setSectionPriceButton)
                    .addComponent(queryBySeatButton)
                    .addComponent(queryByCustomerButton)
                    .addComponent(mainMenuButtonFromSeats)
                    .addComponent(saveConcertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        OptionsLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {mainMenuButtonFromSeats, obtainReportButton, queryByCustomerButton, queryBySeatButton, saveConcertButton, setSectionPriceButton});

        OptionsLayout.setVerticalGroup(
            OptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(obtainReportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(setSectionPriceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(queryBySeatButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(queryByCustomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveConcertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mainMenuButtonFromSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        goldSection.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        goldSection.setText("Gold Section");

        silverSection.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        silverSection.setText("Silver Section");

        bronzeSection.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        bronzeSection.setText("Bronze Section");

        javax.swing.GroupLayout SectionsLayout = new javax.swing.GroupLayout(Sections);
        Sections.setLayout(SectionsLayout);
        SectionsLayout.setHorizontalGroup(
            SectionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SectionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SectionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bronzeSection)
                    .addComponent(silverSection)
                    .addComponent(goldSection))
                .addContainerGap())
        );
        SectionsLayout.setVerticalGroup(
            SectionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SectionsLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(goldSection)
                .addGap(134, 134, 134)
                .addComponent(silverSection)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addComponent(bronzeSection)
                .addGap(40, 40, 40))
        );

        num1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        num1.setText("1");

        num2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        num2.setText("2");

        num3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        num3.setText("3");

        num4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        num4.setText("4");

        num5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        num5.setText("5");

        num6.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        num6.setText("6");

        num7.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        num7.setText("7");

        num8.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        num8.setText("8");

        num9.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        num9.setText("9");

        num10.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        num10.setText("10");

        javax.swing.GroupLayout NumbersLayout = new javax.swing.GroupLayout(Numbers);
        Numbers.setLayout(NumbersLayout);
        NumbersLayout.setHorizontalGroup(
            NumbersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NumbersLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(num10)
                .addGap(27, 27, 27)
                .addComponent(num9)
                .addGap(29, 29, 29)
                .addComponent(num8)
                .addGap(31, 31, 31)
                .addComponent(num7)
                .addGap(28, 28, 28)
                .addComponent(num6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addComponent(num5)
                .addGap(31, 31, 31)
                .addComponent(num4)
                .addGap(31, 31, 31)
                .addComponent(num3)
                .addGap(30, 30, 30)
                .addComponent(num2)
                .addGap(30, 30, 30)
                .addComponent(num1)
                .addGap(0, 0, 0))
        );
        NumbersLayout.setVerticalGroup(
            NumbersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NumbersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NumbersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NumbersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(num2)
                        .addComponent(num3)
                        .addComponent(num1)
                        .addComponent(num4)
                        .addComponent(num5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NumbersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(num7)
                        .addComponent(num8)
                        .addComponent(num9)
                        .addComponent(num6)
                        .addComponent(num10)))
                .addGap(3, 3, 3))
        );

        rowA.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        rowA.setText("A");

        rowB.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        rowB.setText("B");

        rowC.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        rowC.setText("C");

        rowD.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        rowD.setText("D");

        rowE.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        rowE.setText("E");

        rowF.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        rowF.setText("F");

        rowG.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        rowG.setText("G");

        rowH.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        rowH.setText("H");

        rowI.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        rowI.setText("I");

        javax.swing.GroupLayout RowsLayout = new javax.swing.GroupLayout(Rows);
        Rows.setLayout(RowsLayout);
        RowsLayout.setHorizontalGroup(
            RowsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RowsLayout.createSequentialGroup()
                .addGroup(RowsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RowsLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(RowsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rowA)
                            .addComponent(rowC)
                            .addComponent(rowB, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(rowI)
                    .addComponent(rowF)
                    .addComponent(rowE)
                    .addComponent(rowD)
                    .addComponent(rowG)
                    .addComponent(rowH))
                .addGap(26, 26, 26))
        );
        RowsLayout.setVerticalGroup(
            RowsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RowsLayout.createSequentialGroup()
                .addComponent(rowA)
                .addGap(18, 18, 18)
                .addComponent(rowB)
                .addGap(18, 18, 18)
                .addComponent(rowC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(rowD)
                .addGap(18, 18, 18)
                .addComponent(rowE)
                .addGap(18, 18, 18)
                .addComponent(rowF)
                .addGap(63, 63, 63)
                .addComponent(rowG)
                .addGap(18, 18, 18)
                .addComponent(rowH)
                .addGap(19, 19, 19)
                .addComponent(rowI))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(seatB5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatB4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatB3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatB2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatB1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(seatC5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatC4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatC3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatC2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatC1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(seatA5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatA4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatA3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatA2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(seatA1)))
                .addGap(0, 0, 0))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatA3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatA2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatA5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatA4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatA1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatB5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seatB2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatB1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(seatB4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(seatB3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatC5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seatC3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatC2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatC1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(seatC4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(seatE10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatE9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatE8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatE7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatE6))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(seatF10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatF9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatF8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatF7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatF6))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(seatD10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatD9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatD8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatD7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatD6)))
                .addGap(0, 0, 0))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatD8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatD7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatD6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatD10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatD9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatE10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seatE8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatE7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatE6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(seatE9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatF10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seatF8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatF7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatF6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(seatF9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(seatE5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatE4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatE3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatE2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatE1))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(seatF5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatF4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatF3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatF2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatF1))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(seatD5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatD4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatD3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatD2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatD1)))
                .addGap(0, 0, 0))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatD3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatD2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatD1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatD5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatD4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatE5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seatE3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatE2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatE1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(seatE4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatF5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seatF3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatF2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatF1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(seatF4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(seatH10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatH9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatH8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatH7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatH6))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(seatI10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatI9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatI8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatI7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatI6))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(seatG10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatG9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatG8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatG7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatG6)))
                .addGap(0, 0, 0))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatG8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatG7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatG6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatG10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatG9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatH10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seatH8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatH7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatH6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(seatH9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatI10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seatI8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatI7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatI6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(seatI9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(seatH5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatH4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatH3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatH2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatH1))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(seatI5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatI4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatI3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatI2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatI1))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(seatG5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatG4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatG3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatG2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatG1)))
                .addGap(0, 0, 0))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatG3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatG2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatG1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatG5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatG4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatH5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seatH3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatH2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatH1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(seatH4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatI5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seatI3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatI2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatI1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(seatI4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(seatB10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatB9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatB8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatB7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatB6))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(seatC10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatC9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatC8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatC7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatC6))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(seatA10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatA9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatA8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatA7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(seatA6)))
                .addGap(0, 0, 0))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatA8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatA7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatA10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatA9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatA6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatB10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seatB7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatB6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(seatB9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(seatB8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatC10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seatC8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatC7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatC6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(seatC9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout SeatsLayout = new javax.swing.GroupLayout(Seats);
        Seats.setLayout(SeatsLayout);
        SeatsLayout.setHorizontalGroup(
            SeatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SeatsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SeatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(SeatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SeatsLayout.setVerticalGroup(
            SeatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SeatsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SeatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 50, Short.MAX_VALUE)
                .addGroup(SeatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(SeatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        stageLabel.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        stageLabel.setText("Stage");

        MainEntranceLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        MainEntranceLabel1.setText("Fire Exit");

        MainEntranceLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        MainEntranceLabel2.setText("Fire Exit");

        javax.swing.GroupLayout drawingPanelTopLayout = new javax.swing.GroupLayout(drawingPanelTop);
        drawingPanelTop.setLayout(drawingPanelTopLayout);
        drawingPanelTopLayout.setHorizontalGroup(
            drawingPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawingPanelTopLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MainEntranceLabel1)
                .addGap(8, 8, 8)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 202, Short.MAX_VALUE)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MainEntranceLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
            .addGroup(drawingPanelTopLayout.createSequentialGroup()
                .addGroup(drawingPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(drawingPanelTopLayout.createSequentialGroup()
                        .addGap(308, 308, 308)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(drawingPanelTopLayout.createSequentialGroup()
                        .addGap(372, 372, 372)
                        .addComponent(stageLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        drawingPanelTopLayout.setVerticalGroup(
            drawingPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawingPanelTopLayout.createSequentialGroup()
                .addGroup(drawingPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(drawingPanelTopLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(drawingPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                        .addComponent(stageLabel)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingPanelTopLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(drawingPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(90, 90, 90)))
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingPanelTopLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(drawingPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MainEntranceLabel1)
                    .addComponent(MainEntranceLabel2))
                .addGap(119, 119, 119))
        );

        MainEntranceLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        MainEntranceLabel.setText("Main Entrance");

        javax.swing.GroupLayout drawingPanelBottomLayout = new javax.swing.GroupLayout(drawingPanelBottom);
        drawingPanelBottom.setLayout(drawingPanelBottomLayout);
        drawingPanelBottomLayout.setHorizontalGroup(
            drawingPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingPanelBottomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MainEntranceLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE))
        );
        drawingPanelBottomLayout.setVerticalGroup(
            drawingPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawingPanelBottomLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(drawingPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(MainEntranceLabel)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout seatingPlanPanelLayout = new javax.swing.GroupLayout(seatingPlanPanel);
        seatingPlanPanel.setLayout(seatingPlanPanelLayout);
        seatingPlanPanelLayout.setHorizontalGroup(
            seatingPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seatingPlanPanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(drawingPanelTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(seatingPlanPanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(seatingPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drawingPanelBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(seatingPlanPanelLayout.createSequentialGroup()
                        .addComponent(Sections, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(seatingPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(Seats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Numbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Rows, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(Options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 57, Short.MAX_VALUE))
        );
        seatingPlanPanelLayout.setVerticalGroup(
            seatingPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seatingPlanPanelLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(drawingPanelTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(seatingPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(seatingPlanPanelLayout.createSequentialGroup()
                        .addGroup(seatingPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(seatingPlanPanelLayout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(Sections, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(seatingPlanPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(seatingPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(seatingPlanPanelLayout.createSequentialGroup()
                                        .addComponent(Numbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1)
                                        .addComponent(Seats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, seatingPlanPanelLayout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addComponent(Rows, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(14, 14, 14)))))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, seatingPlanPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Options, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)))
                .addComponent(drawingPanelBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        createConcertPanel.setPreferredSize(new java.awt.Dimension(1000, 800));

        CreateConcertTitle.setFont(new java.awt.Font("Verdana", 1, 48)); // NOI18N
        CreateConcertTitle.setText("Create New Concert");

        mainMenuButtonFromCreate.setCursor(Constant.SELECT_CURSOR);
        mainMenuButtonFromCreate.setText("Main Menu");
        mainMenuButtonFromCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuButtonFromCreateActionPerformed(evt);
            }
        });

        concertNameLabel.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        concertNameLabel.setText("Concert Name");

        concertDateLabel.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        concertDateLabel.setText("Concert Date");

        dayLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dayLabel.setText("Day");

        monthLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        monthLabel.setText("Month");

        yearLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        yearLabel.setText("Year");

        dayDropDownList.setCursor(Constant.SELECT_CURSOR);
        dayDropDownList.setBackground(new java.awt.Color(204, 204, 204));
        dayDropDownList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        monthDropDownList.setCursor(Constant.SELECT_CURSOR);
        monthDropDownList.setBackground(new java.awt.Color(204, 204, 204));
        monthDropDownList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        yearDropDownList.setCursor(Constant.SELECT_CURSOR);
        yearDropDownList.setBackground(new java.awt.Color(204, 204, 204));
        yearDropDownList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020" }));

        createConcertButton.setCursor(Constant.SELECT_CURSOR);
        createConcertButton.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        createConcertButton.setText("Create Concert");
        createConcertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createConcertButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newConcertInputLayout = new javax.swing.GroupLayout(newConcertInput);
        newConcertInput.setLayout(newConcertInputLayout);
        newConcertInputLayout.setHorizontalGroup(
            newConcertInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newConcertInputLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(newConcertInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newConcertInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(ConcertNameInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(concertNameLabel))
                    .addComponent(concertDateLabel, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(createConcertButton, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.CENTER, newConcertInputLayout.createSequentialGroup()
                        .addGroup(newConcertInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(dayDropDownList, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dayLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(newConcertInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(monthDropDownList, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(monthLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(newConcertInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(yearDropDownList, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yearLabel))))
                .addGap(34, 34, 34))
        );
        newConcertInputLayout.setVerticalGroup(
            newConcertInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newConcertInputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(concertNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConcertNameInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(concertDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newConcertInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayLabel)
                    .addComponent(monthLabel)
                    .addComponent(yearLabel))
                .addGap(5, 5, 5)
                .addGroup(newConcertInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayDropDownList, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthDropDownList, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearDropDownList, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addComponent(createConcertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout createConcertPanelLayout = new javax.swing.GroupLayout(createConcertPanel);
        createConcertPanel.setLayout(createConcertPanelLayout);
        createConcertPanelLayout.setHorizontalGroup(
            createConcertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createConcertPanelLayout.createSequentialGroup()
                .addGap(0, 907, Short.MAX_VALUE)
                .addComponent(mainMenuButtonFromCreate)
                .addContainerGap())
            .addGroup(createConcertPanelLayout.createSequentialGroup()
                .addGap(202, 202, 202)
                .addGroup(createConcertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CreateConcertTitle)
                    .addGroup(createConcertPanelLayout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(newConcertInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        createConcertPanelLayout.setVerticalGroup(
            createConcertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createConcertPanelLayout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(CreateConcertTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addGap(50, 50, 50)
                .addComponent(newConcertInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(166, 166, 166)
                .addComponent(mainMenuButtonFromCreate)
                .addContainerGap())
        );

        SelectConcertTitle.setFont(new java.awt.Font("Verdana", 1, 48)); // NOI18N
        SelectConcertTitle.setText("Select Concert");

        mainMenuButtonFromSelect.setCursor(Constant.SELECT_CURSOR);
        mainMenuButtonFromSelect.setText("Main Menu");
        mainMenuButtonFromSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuButtonFromSelectActionPerformed(evt);
            }
        });

        viewConcertButton.setCursor(Constant.SELECT_CURSOR);
        viewConcertButton.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        viewConcertButton.setText("View Concert Seating Plan");
        viewConcertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewConcertButtonActionPerformed(evt);
            }
        });

        concertDropDownList.setCursor(Constant.SELECT_CURSOR);
        concertDropDownList.setBackground(new java.awt.Color(204, 204, 204));
        concertDropDownList.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        concertDropDownList.setMaximumRowCount(50);
        concertDropDownList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));

        javax.swing.GroupLayout selectConcertFromListLayout = new javax.swing.GroupLayout(selectConcertFromList);
        selectConcertFromList.setLayout(selectConcertFromListLayout);
        selectConcertFromListLayout.setHorizontalGroup(
            selectConcertFromListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectConcertFromListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectConcertFromListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(viewConcertButton)
                    .addComponent(concertDropDownList, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        selectConcertFromListLayout.setVerticalGroup(
            selectConcertFromListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectConcertFromListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(concertDropDownList, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(211, 211, 211)
                .addComponent(viewConcertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout selectConcertPanelLayout = new javax.swing.GroupLayout(selectConcertPanel);
        selectConcertPanel.setLayout(selectConcertPanelLayout);
        selectConcertPanelLayout.setHorizontalGroup(
            selectConcertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectConcertPanelLayout.createSequentialGroup()
                .addGap(0, 907, Short.MAX_VALUE)
                .addComponent(mainMenuButtonFromSelect)
                .addContainerGap())
            .addGroup(selectConcertPanelLayout.createSequentialGroup()
                .addGap(279, 279, 279)
                .addGroup(selectConcertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectConcertFromList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(selectConcertPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(SelectConcertTitle)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        selectConcertPanelLayout.setVerticalGroup(
            selectConcertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectConcertPanelLayout.createSequentialGroup()
                .addGap(199, 199, 199)
                .addComponent(SelectConcertTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addGap(28, 28, 28)
                .addComponent(selectConcertFromList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(147, 147, 147)
                .addComponent(mainMenuButtonFromSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(createConcertPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(mainMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(seatingPlanPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(selectConcertPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(createConcertPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 3, Short.MAX_VALUE)
                    .addComponent(mainMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 3, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(seatingPlanPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(selectConcertPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void startProgram() 
    {       
        try //Try to load concerts from file
        {            
            this.concerts = new ArrayList<>();
            this.loadConcertsFromFile();
        }
        catch(FileNotFoundException i) //If the concerts directory doesn't exist, create a new one
        {                 
            File directory = new File(Constant.DIRECTORY);
            directory.mkdir();
        }            
        this.setTitle("Concert Hall Booking System v 1.0");                       
        this.mainMenuPanel.setVisible(true);
        this.setVisible(true);   
    }   
    
    //Loads all concerts, along with their customers and seats into the application from file
    private void loadConcertsFromFile() throws FileNotFoundException
    {
        //Connect to concerts directory and load each concert into the system from file
        Scanner concertInput = new Scanner(new File(Constant.DIRECTORY + File.separator + Constant.CONCERTS_FILE));
        ArrayList<Concert> tempConcerts = new ArrayList<>();            
        try
        {
            while(concertInput.hasNextLine())
            {                  
                //This part checks if the currently loaded concert already exists in the system,
                //and if it does it adds it to tempConcerts that will hold it for error checking 
                //after we have finished loading in all the concerts
                Concert concert = Concert.load(concertInput);
                if(concert != null)
                {
                    if(this.concerts.size() > 0)
                    {
                        for(int i = 0; i < this.concerts.size(); i++)
                        {                                               
                            if(concert.getName().compareToIgnoreCase(this.concerts.get(i).getName()) == 0)
                            {
                                if(concert.getDateWithSlashes().compareTo(this.concerts.get(i).getDateWithSlashes()) == 0)
                                {
                                    if(!tempConcerts.contains(concert))                              
                                    {
                                        tempConcerts.add(concert);                                    
                                    }                               
                                }
                            }                        
                        }
                    }
                    this.concerts.add(concert);
                    this.concertDropDownList.addItem(
                        concert.getName() + " | " + concert.getDateWithSlashes()
                    );    
                    concertInput.nextLine(); 
                }
            }
            
            //This is where tempConcerts is checked to see if any concerts are
            //stored inside it, if there is then we throw an exception, passing the
            //concerts that have duplicates to a ConcertAlreadyExistsException
            if(tempConcerts.size() > 0)
            {
                String concertList = "";               
                for(Concert concert : tempConcerts)
                {
                    concertList += "----- " + concert.getName() + " " + concert.getDateWithSlashes() + " -----\n";                                   
                }            
                throw new ConcertAlreadyExistsException(concertList, Constant.DIRECTORY + File.separator + Constant.CONCERTS_FILE);
            }          
        }       
        catch(ConcertAlreadyExistsException c)
        {
            //This displays a message to user, telling them what concerts have duplicates that are
            //stored on file, they must then either edit them or delete the file entirely
            MessagePanel.displayMessage(this, c.getMessage(), "Fatal Error: " + Constant.DIRECTORY + File.separator + Constant.CONCERTS_FILE);
            System.exit(0);
        }                       
        concertInput.close();                
    }   
    
    //Saves all concerts, along with their customers and seats to file
    private void saveConcertsToFile() throws FileNotFoundException
    {                             
        //Connect to concerts directory and save each concert to file
        PrintWriter concertOutput = new PrintWriter(Constant.DIRECTORY + File.separator + Constant.CONCERTS_FILE);
        for(int i = 0; i < this.concerts.size(); i++)
        {           
            if(this.concerts.get(i).save(concertOutput))
            {
                System.out.printf(
                    "Successfully saved concert %s %s%n", this.concerts.get(i).getName(), 
                    this.concerts.get(i).getDateWithSlashes()
                );
            }
            else
            {
                System.out.printf(
                    "Failed to save concert %s %s%n", this.concerts.get(i).getName(), 
                    this.concerts.get(i).getDateWithSlashes()
                );
            }
        }
        concertOutput.close();                
    }   
    
    private void createNewConcertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewConcertButtonActionPerformed
        this.mainMenuPanel.setVisible(false);
        this.createConcertPanel.setVisible(true);
        this.setTitle("Create New Concert");
    }//GEN-LAST:event_createNewConcertButtonActionPerformed

    private void selectConcertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectConcertButtonActionPerformed
        this.mainMenuPanel.setVisible(false);
        this.selectConcertPanel.setVisible(true);
        this.setTitle("Select Concert");
    }//GEN-LAST:event_selectConcertButtonActionPerformed

    //When you click the "Save & Exit" button, this code is called
    //It asks you if you are sure you want to exit, providing you with a
    //yes or no option
    private void exitProgramButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitProgramButtonActionPerformed
        Object[] options = {"Save & Exit", "Cancel"};
        int option = MessagePanel.optionDialog(
            this, "Are you sure you want to exit?", "Exit Option", options
        );
        
        if(option == 0)
        {
            try
            {
                this.saveConcertsToFile();
                MessagePanel.displayMessage(
                    this, "Successfully saved concerts to file\n" 
                    + "Application will now exit...", "Save & Exit"
                );                
                System.exit(0);
            }
            catch(FileNotFoundException ex)
            {
                MessagePanel.displayMessage(
                    this, "Error when saving to file...\n" + ex.getMessage(), 
                    "Error: Save Operation Failed"
                );                              
                System.exit(0);                       
            }
        } 
    }//GEN-LAST:event_exitProgramButtonActionPerformed
    
    //When you click the "Set Section Price" button, this code is called
    //It asks you pass in the seat section and a new price to give to that section    
    private void setSectionPriceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setSectionPriceButtonActionPerformed
        String seatSection = MessagePanel.inputDialog(
            this, "Please input seat section you want to change:\n" 
            + "e.g Gold, Silver or Bronze", "Change Seat Section Price"
        );
               
        if(seatSection.length() > 0)
        {
            int i = 0;            
            boolean found = false;
            while(i < Concert.SEAT_SECTIONS.length && !found)
            {
                if(seatSection.compareToIgnoreCase(Concert.SEAT_SECTIONS[i]) == 0)
                {
                    found = true;
                    String newPrice = MessagePanel.inputDialog(
                        this, "Please input new price: (e.g 60.00 or 60) ", "Change Seat Section Price"
                    );
                    
                    if(newPrice.length() > 0)
                    {                       
                        try
                        {
                            double finalPrice = Double.parseDouble(newPrice);
                            this.currentConcert.setSectionPrice(seatSection, finalPrice);
                            
                            MessagePanel.displayMessage(
                                this, Constant.capitalize(seatSection) + " seat section price changed to: £" 
                                + this.currentConcert.getSectionPrice(seatSection), "Change Seat Section Price"
                            );                               
                        }
                        catch(NumberFormatException n)
                        {
                            MessagePanel.displayMessage(
                                this, "Inputted value is not a number", "Error: Invalid Input"
                            );                           
                        }                                                       
                    }
                    else
                    {
                        MessagePanel.displayMessage(
                            this, "Please input a new price", "Error: Invalid Input"
                        );                        
                    }
                }   
                else
                {
                    i++;
                }
            }            
            if(!found)
            {    
                MessagePanel.displayMessage(
                    this, "Inputted seat section does not exist", "Error: Invalid Input"
                );                          
            }
        }
        else
        {
            MessagePanel.displayMessage(
                this, "Please input a seat section", "Error: Invalid Input"
            );           
        }
    }//GEN-LAST:event_setSectionPriceButtonActionPerformed
    
    //When you click the "Query By Seat" button, this code is called
    //It asks you pass in the seat row and number to query, 
    //returning information about that seat
    private void queryBySeatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queryBySeatButtonActionPerformed
        String seatRow = MessagePanel.inputDialog(
            this, "Please input row you want to query:\n" + "(From A to I)", "Query By Seat"
        );
                              
        if(seatRow.length() > 0)
        {           
            int i = 0;
            boolean foundRow = false;
            while(i < Concert.SEAT_ROWS.length && !foundRow)
            {
                if(seatRow.compareToIgnoreCase(Concert.SEAT_ROWS[i]) == 0)
                {
                    foundRow = true;
                    String seatNum = MessagePanel.inputDialog(
                        this, "Please input seat number you want to query:\n" 
                        + "(From 1 to 10)", "Query By Seat"
                    );
                                       
                    if(seatNum.length() > 0)
                    {                      
                        boolean isANumber = true;
                        try
                        {
                            int seatNumToInt = Integer.parseInt(seatNum);
                            if(seatNumToInt > 0 && seatNumToInt <= 10)
                            {
                                Seat seat = this.currentConcert.getSeat(seatRow, seatNumToInt);
                                MessagePanel.displayMessage(
                                    this, this.currentConcert.queryBySeat(seat), "Query Result"
                                );                                
                            }
                            else
                            {
                                MessagePanel.displayMessage(
                                    this, "Inputted seat number does not exist", "Error: Invalid Input"
                                );                             
                            }
                        }
                        catch(NumberFormatException n)
                        {
                            isANumber = false;
                        }
                        if(!isANumber)
                        {
                            MessagePanel.displayMessage(
                                this, "Please input a seat number", "Error: Invalid Input"
                            );                           
                        }                                                                                                  
                    }
                    else
                    {
                        MessagePanel.displayMessage(
                            this, "Please input a seat number", "Error: Invalid Input"
                        );                        
                    }                                      
                }
                else
                {
                    i++;
                }
            }
            if(!foundRow)
            {
                MessagePanel.displayMessage(
                    this, "Inputted row does not exist", "Error: Invalid Input"
                );                
            }
        }
        else
        {
            MessagePanel.displayMessage(
                this, "Please input a row", "Error: Invalid Input"
            );           
        }
    }//GEN-LAST:event_queryBySeatButtonActionPerformed
    
    //When you click the "Query By Customer" button, this code is called
    //It asks you pass in the customer newConcertName to query, returning all the seats booked by that customer    
    private void queryByCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queryByCustomerButtonActionPerformed
        if(this.currentConcert.getCustomers().size() > 0)
        {                 
            String customerList = "List of customers:\n";
            int i = 1;
            for(Customer customer : this.currentConcert.getCustomers())
            {
                customerList += i + ". " + customer.getName() + "\n";
                i++;
            }

            String customerName = MessagePanel.inputDialog(
                this, "Please input customer name from list to query\n"
                      + customerList, "Query By Customer"
            );

            if(customerName.length() > 0)
            {
                MessagePanel.displayMessage(
                    this, this.currentConcert.queryByCustomer(customerName), "Query Result"
                );            
            }
            else
            {
                MessagePanel.displayMessage(
                    this, "Please input a customer name", "Error: Invalid Input"
                );          
            }
        }
        else
        {
            MessagePanel.displayMessage(
                this, "There are no customers available to query for this concert", "No Available Customers to Query"
            );
        }
    }//GEN-LAST:event_queryByCustomerButtonActionPerformed

    private void mainMenuButtonFromCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuButtonFromCreateActionPerformed
        this.ConcertNameInputField.setText("");
        this.dayDropDownList.setSelectedIndex(0);
        this.monthDropDownList.setSelectedIndex(0);
        this.yearDropDownList.setSelectedIndex(0);
        this.createConcertPanel.setVisible(false);
        this.mainMenuPanel.setVisible(true);
        this.setTitle("Concert Hall Booking System v 1.0");
    }//GEN-LAST:event_mainMenuButtonFromCreateActionPerformed
    
    //When you click the "Create New Concert" button, this code is called
    //It takes in the supplied newConcertName and date and uses that to create a new concert 
    //If the user creates a new concert with the same name of concert that already exists
    //but if it is for another date, the system treats the created concert as a completely
    //new concert, so the system doesn't treat them the same
    private void createConcertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createConcertButtonActionPerformed
        String newConcertName = this.ConcertNameInputField.getText().trim();        
        if(newConcertName.length() > 0)
        {
            int day = Integer.parseInt(this.dayDropDownList.getSelectedItem().toString());
            int month = Integer.parseInt(this.monthDropDownList.getSelectedItem().toString());
            int year = Integer.parseInt(this.yearDropDownList.getSelectedItem().toString());
            String dateWithSlashes = day + "/" + month + "/" + year;
            
            //This part checks if the newly created concert already exists
            //if it does, then the user can choose to either override it, or
            //don't create the new concert
            int i = 0;
            boolean concertAlreadyExists = false;                                     
            while(i < this.concerts.size() && !concertAlreadyExists) 
            {
                if(this.concerts.get(i).getName().compareToIgnoreCase(newConcertName) == 0)
                {                    
                    if(this.concerts.get(i).getDateWithSlashes().compareTo(dateWithSlashes) == 0)
                    {
                        try
                        {
                            concertAlreadyExists = true;
                            throw new ConcertAlreadyExistsException(this.concerts.get(i));
                        }
                        catch(ConcertAlreadyExistsException e)
                        {                                                   
                            Object[] options = {"Yes", "Cancel"};
                            int option = MessagePanel.optionDialog(
                                this, e.getMessage(), "Concert Already Exists", options
                             );

                            if(option == 0)
                            {
                                this.concerts.remove(i);                               
                                this.currentConcert = new Concert(Constant.capitalize(newConcertName), day, month, year);
                                this.concerts.add(this.currentConcert);
                                this.concertDropDownList.removeItemAt(i);
                                this.concertDropDownList.addItem(this.currentConcert.getName()
                                    + " | " + this.currentConcert.getDateWithSlashes()
                                );              
                                
                                MessagePanel.displayMessage(
                                    this, "Created a new concert called:\n" + this.currentConcert.getName() 
                                    + "\n" + "For date: " + this.currentConcert.getDateWithSlashes(), "New Concert"
                                );

                                this.createConcertPanel.setVisible(false);
                                this.displaySeatingPlan();
                            }  
                        }
                    }
                    else
                    {
                        i++;
                    }
                }
                else
                {
                    i++;
                }
            }                              
            if(!concertAlreadyExists)
            {                               
                this.currentConcert = new Concert(Constant.capitalize(newConcertName), day, month, year);
                this.concerts.add(this.currentConcert);
                this.concertDropDownList.addItem(
                    this.currentConcert.getName() + " | " + this.currentConcert.getDateWithSlashes()
                );         
                
                MessagePanel.displayMessage(
                    this, "Created a new concert called:\n" + this.currentConcert.getName() 
                    + "\n" + "For date: " + this.currentConcert.getDateWithSlashes(), "New Concert"
                );

                this.createConcertPanel.setVisible(false);
                this.displaySeatingPlan();
            }           
        }            
        else 
        {                                      
            MessagePanel.displayMessage(
                this, "No name supplied for new concert", "Error: Invalid Input"
            );                      
        }                            
    }//GEN-LAST:event_createConcertButtonActionPerformed

    private void displaySeatingPlan()
    {
        //This array makes it easier to perform operations on the seat icons
        //This is due to the fact that the seat icons are pre-intialized in the
        //initComponents() method, so this array sorts them in order with the 
        //actual seats in memory, just to make life a bit easier for now
        JButton[] seatIcons = {
            seatA1, seatA2, seatA3, seatA4, seatA5, seatA6, seatA7, seatA8, seatA9, seatA10,
            seatB1, seatB2, seatB3, seatB4, seatB5, seatB6, seatB7, seatB8, seatB9, seatB10,
            seatC1, seatC2, seatC3, seatC4, seatC5, seatC6, seatC7, seatC8, seatC9, seatC10,
            seatD1, seatD2, seatD3, seatD4, seatD5, seatD6, seatD7, seatD8, seatD9, seatD10,
            seatE1, seatE2, seatE3, seatE4, seatE5, seatE6, seatE7, seatE8, seatE9, seatE10,
            seatF1, seatF2, seatF3, seatF4, seatF5, seatF6, seatF7, seatF8, seatF9, seatF10,
            seatG1, seatG2, seatG3, seatG4, seatG5, seatG6, seatG7, seatG8, seatG9, seatG10,
            seatH1, seatH2, seatH3, seatH4, seatH5, seatH6, seatH7, seatH8, seatH9, seatH10,
            seatI1, seatI2, seatI3, seatI4, seatI5, seatI6, seatI7, seatI8, seatI9, seatI10           
        };
        
        //Obtain the seats array of the currently selected concert and
        //create a SeatHandler array to store all the event handlers for use of
        //the seat icons in the seatIcons array
        Seat[] selectedConcertSeats = this.currentConcert.getSeats();       
        SeatHandler[] seatHandlers = new SeatHandler[seatIcons.length]; 
                
        for(int i = 0; i < seatIcons.length; i++)
        {                                    
            //Gets the runtime class object name of the selected seat
            String seatType = selectedConcertSeats[i].getClass().getSimpleName();
                        
            //Setup the color for each seatIcon depending on status of actual seat
            if(selectedConcertSeats[i].getStatus())
            {
                seatIcons[i].setBackground(Constant.RED);
            }
            else
            {
                switch (seatType) //Sets colour depending on seat type
                {
                    case "GoldSeat":
                        seatIcons[i].setBackground(Constant.GOLD);
                        break;
                    case "SilverSeat":
                        seatIcons[i].setBackground(Constant.SILVER);
                        break;
                    default:
                        seatIcons[i].setBackground(Constant.BRONZE);
                        break;                       
                }
            }
            
            //If a seatIcon has any action listeners attached to it, remove them          
            if(seatIcons[i].getActionListeners().length > 0)
            {                               
                for(ActionListener al : seatIcons[i].getActionListeners())
                {
                    seatIcons[i].removeActionListener(al);
                }
            }
            
            //Attach a SeatHandler to the seatIcon for the selected concert                                
            seatHandlers[i] = new SeatHandler(
                this, this.currentConcert, seatIcons[i], selectedConcertSeats[i], seatType                 
            );
            seatIcons[i].addActionListener(seatHandlers[i]);             
            seatIcons[i].setCursor(Constant.SELECT_CURSOR);                       
        }        
                                
        this.setTitle(
            "Concert | " + this.currentConcert.getName()
            + " " + this.currentConcert.getDateWithSlashes()
        );     
        this.seatingPlanPanel.setVisible(true);
    }
    
    private void mainMenuButtonFromSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuButtonFromSelectActionPerformed
        if(this.concertDropDownList.getItemCount() > 0)
        {
            this.concertDropDownList.setSelectedIndex(0);
        }              
        this.selectConcertPanel.setVisible(false);
        this.mainMenuPanel.setVisible(true);
        this.setTitle("Concert Hall Booking System v 1.0");
    }//GEN-LAST:event_mainMenuButtonFromSelectActionPerformed
    
    //When you click the "View Concert Seating Plan" button, this code is called
    //It takes the value of the selected concert from the concert drop down list,
    //and uses that to display that concerts seating plan
    private void viewConcertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewConcertButtonActionPerformed
        //Gets the selected concerts name and then displays its seating plan
        String selectedConcert = this.concertDropDownList.getSelectedItem().toString();
        //finds the separator
        int divider = selectedConcert.lastIndexOf("|");  
        //gets the concert name and date and separate them
        String concertName = selectedConcert.substring(0, divider-1);
        String concertDate = selectedConcert.substring(divider+2);

        int i = 0;
        boolean foundConcert = false;
        while(i < this.concerts.size() && !foundConcert)
        {
            if(concertName.compareToIgnoreCase(this.concerts.get(i).getName()) == 0)
            {       
                if(concertDate.compareTo(this.concerts.get(i).getDateWithSlashes()) == 0)
                {
                    foundConcert = true;
                    this.currentConcert = this.concerts.get(i);
                    this.selectConcertPanel.setVisible(false);
                    this.displaySeatingPlan();
                }
                else
                {
                    i++;
                }
            }
            else
            {
                i++;
            }
        }                      
    }//GEN-LAST:event_viewConcertButtonActionPerformed

    private void obtainReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obtainReportButtonActionPerformed
        MessagePanel.displayMessage(
            this, this.currentConcert.getReport(), "Concert Report"
        );            
    }//GEN-LAST:event_obtainReportButtonActionPerformed

    private void saveConcertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveConcertButtonActionPerformed
        try
        {
            this.saveConcertsToFile();
            MessagePanel.displayMessage(
                this, "Successfully Saved Concert:\n" + this.currentConcert.getName() 
                + " " + this.currentConcert.getDateWithSlashes() + " to file!", "Save Successful!"
            );                             
        }
        catch(FileNotFoundException ex)
        {
            MessagePanel.displayMessage(
                this, "Error when saving to file...\n" + ex.getMessage(), "Error: Save Operation Failed"
            );                                                           
        }
    }//GEN-LAST:event_saveConcertButtonActionPerformed

    private void mainMenuButtonFromSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuButtonFromSeatsActionPerformed
        this.seatingPlanPanel.setVisible(false);
        this.mainMenuPanel.setVisible(true);
        this.setTitle("Concert Hall Booking System v 1.0");
    }//GEN-LAST:event_mainMenuButtonFromSeatsActionPerformed
            
    public static void main(String args[]) 
    {       
        try 
        {            
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());                    
                    break;
                }
            }
        } 
        catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) 
        {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
                
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ConcertNameInputField;
    private javax.swing.JLabel CreateConcertTitle;
    private javax.swing.JLabel MainEntranceLabel;
    private javax.swing.JLabel MainEntranceLabel1;
    private javax.swing.JLabel MainEntranceLabel2;
    private javax.swing.JPanel Numbers;
    private javax.swing.JPanel Options;
    private javax.swing.JPanel Rows;
    private javax.swing.JPanel Seats;
    private javax.swing.JPanel Sections;
    private javax.swing.JLabel SelectConcertTitle;
    private javax.swing.JLabel bronzeSection;
    private javax.swing.JLabel concertDateLabel;
    private javax.swing.JComboBox<String> concertDropDownList;
    private javax.swing.JLabel concertNameLabel;
    private javax.swing.JButton createConcertButton;
    private javax.swing.JPanel createConcertPanel;
    private javax.swing.JButton createNewConcertButton;
    private javax.swing.JComboBox<String> dayDropDownList;
    private javax.swing.JLabel dayLabel;
    private javax.swing.JPanel drawingPanelBottom;
    private javax.swing.JPanel drawingPanelTop;
    private javax.swing.JButton exitProgramButton;
    private javax.swing.JLabel goldSection;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JButton mainMenuButtonFromCreate;
    private javax.swing.JButton mainMenuButtonFromSeats;
    private javax.swing.JButton mainMenuButtonFromSelect;
    private javax.swing.JPanel mainMenuPanel;
    private javax.swing.JLabel mainTitleLabel;
    private javax.swing.JComboBox<String> monthDropDownList;
    private javax.swing.JLabel monthLabel;
    private javax.swing.JPanel newConcertInput;
    private javax.swing.JLabel num1;
    private javax.swing.JLabel num10;
    private javax.swing.JLabel num2;
    private javax.swing.JLabel num3;
    private javax.swing.JLabel num4;
    private javax.swing.JLabel num5;
    private javax.swing.JLabel num6;
    private javax.swing.JLabel num7;
    private javax.swing.JLabel num8;
    private javax.swing.JLabel num9;
    private javax.swing.JButton obtainReportButton;
    private javax.swing.JButton queryByCustomerButton;
    private javax.swing.JButton queryBySeatButton;
    private javax.swing.JLabel rowA;
    private javax.swing.JLabel rowB;
    private javax.swing.JLabel rowC;
    private javax.swing.JLabel rowD;
    private javax.swing.JLabel rowE;
    private javax.swing.JLabel rowF;
    private javax.swing.JLabel rowG;
    private javax.swing.JLabel rowH;
    private javax.swing.JLabel rowI;
    private javax.swing.JButton saveConcertButton;
    private javax.swing.JButton seatA1;
    private javax.swing.JButton seatA10;
    private javax.swing.JButton seatA2;
    private javax.swing.JButton seatA3;
    private javax.swing.JButton seatA4;
    private javax.swing.JButton seatA5;
    private javax.swing.JButton seatA6;
    private javax.swing.JButton seatA7;
    private javax.swing.JButton seatA8;
    private javax.swing.JButton seatA9;
    private javax.swing.JButton seatB1;
    private javax.swing.JButton seatB10;
    private javax.swing.JButton seatB2;
    private javax.swing.JButton seatB3;
    private javax.swing.JButton seatB4;
    private javax.swing.JButton seatB5;
    private javax.swing.JButton seatB6;
    private javax.swing.JButton seatB7;
    private javax.swing.JButton seatB8;
    private javax.swing.JButton seatB9;
    private javax.swing.JButton seatC1;
    private javax.swing.JButton seatC10;
    private javax.swing.JButton seatC2;
    private javax.swing.JButton seatC3;
    private javax.swing.JButton seatC4;
    private javax.swing.JButton seatC5;
    private javax.swing.JButton seatC6;
    private javax.swing.JButton seatC7;
    private javax.swing.JButton seatC8;
    private javax.swing.JButton seatC9;
    private javax.swing.JButton seatD1;
    private javax.swing.JButton seatD10;
    private javax.swing.JButton seatD2;
    private javax.swing.JButton seatD3;
    private javax.swing.JButton seatD4;
    private javax.swing.JButton seatD5;
    private javax.swing.JButton seatD6;
    private javax.swing.JButton seatD7;
    private javax.swing.JButton seatD8;
    private javax.swing.JButton seatD9;
    private javax.swing.JButton seatE1;
    private javax.swing.JButton seatE10;
    private javax.swing.JButton seatE2;
    private javax.swing.JButton seatE3;
    private javax.swing.JButton seatE4;
    private javax.swing.JButton seatE5;
    private javax.swing.JButton seatE6;
    private javax.swing.JButton seatE7;
    private javax.swing.JButton seatE8;
    private javax.swing.JButton seatE9;
    private javax.swing.JButton seatF1;
    private javax.swing.JButton seatF10;
    private javax.swing.JButton seatF2;
    private javax.swing.JButton seatF3;
    private javax.swing.JButton seatF4;
    private javax.swing.JButton seatF5;
    private javax.swing.JButton seatF6;
    private javax.swing.JButton seatF7;
    private javax.swing.JButton seatF8;
    private javax.swing.JButton seatF9;
    private javax.swing.JButton seatG1;
    private javax.swing.JButton seatG10;
    private javax.swing.JButton seatG2;
    private javax.swing.JButton seatG3;
    private javax.swing.JButton seatG4;
    private javax.swing.JButton seatG5;
    private javax.swing.JButton seatG6;
    private javax.swing.JButton seatG7;
    private javax.swing.JButton seatG8;
    private javax.swing.JButton seatG9;
    private javax.swing.JButton seatH1;
    private javax.swing.JButton seatH10;
    private javax.swing.JButton seatH2;
    private javax.swing.JButton seatH3;
    private javax.swing.JButton seatH4;
    private javax.swing.JButton seatH5;
    private javax.swing.JButton seatH6;
    private javax.swing.JButton seatH7;
    private javax.swing.JButton seatH8;
    private javax.swing.JButton seatH9;
    private javax.swing.JButton seatI1;
    private javax.swing.JButton seatI10;
    private javax.swing.JButton seatI2;
    private javax.swing.JButton seatI3;
    private javax.swing.JButton seatI4;
    private javax.swing.JButton seatI5;
    private javax.swing.JButton seatI6;
    private javax.swing.JButton seatI7;
    private javax.swing.JButton seatI8;
    private javax.swing.JButton seatI9;
    private javax.swing.JPanel seatingPlanPanel;
    private javax.swing.JButton selectConcertButton;
    private javax.swing.JPanel selectConcertFromList;
    private javax.swing.JPanel selectConcertPanel;
    private javax.swing.JButton setSectionPriceButton;
    private javax.swing.JLabel silverSection;
    private javax.swing.JLabel stageLabel;
    private javax.swing.JLabel subTitleLabel;
    private javax.swing.JButton viewConcertButton;
    private javax.swing.JComboBox<String> yearDropDownList;
    private javax.swing.JLabel yearLabel;
    // End of variables declaration//GEN-END:variables
}
